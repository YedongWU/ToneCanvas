/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/audioProcessing.js":
/*!********************************!*\
  !*** ./src/audioProcessing.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _sharedStatus_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./sharedStatus.js */ \"./src/sharedStatus.js\");\n\nlet context = new (window.AudioContext || window.webkitAudioContext)();\nlet oscillator = null;\nlet gainNode = context.createGain();\nlet lastUpdateTime = 0;\nlet updateInterval;\nfunction startUpdatingPosition() {\n  if (!oscillator) {\n    oscillator = context.createOscillator();\n    oscillator.connect(gainNode);\n    gainNode.connect(context.destination);\n    oscillator.start();\n  }\n  updateInterval = setInterval(() => {\n    if (_sharedStatus_js__WEBPACK_IMPORTED_MODULE_0__.sharedStatus.drawing && !(0,_sharedStatus_js__WEBPACK_IMPORTED_MODULE_0__.getIsInTheButton)()) {\n      const {\n        x,\n        y\n      } = (0,_sharedStatus_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentPosition)();\n      handlePosition(x, y);\n    } else {\n      // 在按钮区域时停止振荡器发声\n      if (oscillator) {\n        gainNode.gain.setTargetAtTime(0, context.currentTime, 0.01);\n      }\n    }\n  }, 1000 / 120); // 每秒120次调用handlePosition\n}\nfunction stopUpdatingPosition() {\n  clearInterval(updateInterval);\n  if (oscillator) {\n    oscillator.stop();\n    oscillator.disconnect();\n    oscillator = null;\n  }\n}\nfunction handlePosition(x, y) {\n  const now = Date.now();\n  if (now - lastUpdateTime < 1000 / 120) {\n    // 跳过120Hz内的请求\n    return;\n  }\n  lastUpdateTime = now;\n  const frequency = yToFrequency(1 - y); // 使用 y 来计算频率\n  const volume = 1; // 将音量设为固定值，例如1\n\n  if (oscillator) {\n    oscillator.frequency.setTargetAtTime(frequency, context.currentTime, 0.01);\n    gainNode.gain.setTargetAtTime(volume, context.currentTime, 0.01);\n  }\n}\nfunction yToFrequency(y) {\n  const minFrequency = (0,_sharedStatus_js__WEBPACK_IMPORTED_MODULE_0__.getMinFrequency)(); // 获取最小频率\n  const maxFrequency = (0,_sharedStatus_js__WEBPACK_IMPORTED_MODULE_0__.getMaxFrequency)(); // 获取最大频率\n  const minLogFrequency = Math.log(minFrequency);\n  const maxLogFrequency = Math.log(maxFrequency);\n  const logFrequency = minLogFrequency + (maxLogFrequency - minLogFrequency) * y;\n  return Math.exp(logFrequency);\n}\n(0,_sharedStatus_js__WEBPACK_IMPORTED_MODULE_0__.subscribe)(status => {\n  if (status.currentStatus === 'StartDrawing' || status.currentStatus === 'Drawing') {\n    startUpdatingPosition();\n  } else if (status.currentStatus === 'EndDrawing' || status.currentStatus === 'NotDrawing') {\n    stopUpdatingPosition();\n  }\n});\n\n//# sourceURL=webpack://my-project/./src/audioProcessing.js?");

/***/ }),

/***/ "./src/buttonComponent.js":
/*!********************************!*\
  !*** ./src/buttonComponent.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   initializeButton: () => (/* binding */ initializeButton)\n/* harmony export */ });\n/* harmony import */ var _svgIcons_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./svgIcons.js */ \"./src/svgIcons.js\");\n/* harmony import */ var _sharedStatus_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./sharedStatus.js */ \"./src/sharedStatus.js\");\n/* harmony import */ var _frequencyUpdater_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./frequencyUpdater.js */ \"./src/frequencyUpdater.js\");\n\n\n\nlet previousStatus = '';\nfunction createImageFromURL(url, onError) {\n  const img = new Image();\n  img.src = url;\n  img.onerror = onError;\n  return img;\n}\nfunction handleImageLoadError(event) {\n  console.error(\"Failed to load SVG image:\", event.target.src);\n}\nconst greenIcon = createImageFromURL(_svgIcons_js__WEBPACK_IMPORTED_MODULE_0__.greenIconURL, handleImageLoadError);\nconst cyanIcon = createImageFromURL(_svgIcons_js__WEBPACK_IMPORTED_MODULE_0__.cyanIconURL, handleImageLoadError);\nconst newIcon1 = createImageFromURL(_svgIcons_js__WEBPACK_IMPORTED_MODULE_0__.newIcon1URL, handleImageLoadError);\nconst newIcon2 = createImageFromURL(_svgIcons_js__WEBPACK_IMPORTED_MODULE_0__.newIcon2URL, handleImageLoadError);\nlet greenIconDimmed = false;\nlet cyanIconDimmed = false;\nlet newIcon1Dimmed = false;\nlet newIcon2Dimmed = false;\nlet isAudioPlaying = false;\nfunction drawButton(canvas, context, greenIcon, cyanIcon, newIcon1, newIcon2) {\n  const buttonWidth = canvas.width * 0.1;\n  const buttonHeight = canvas.height * 0.1;\n  context.clearRect(10, 10, buttonWidth, buttonHeight);\n  context.clearRect(10, canvas.height - 10 - buttonHeight, buttonWidth, buttonHeight);\n  context.clearRect(10, canvas.height * 0.33 - buttonHeight / 2, buttonWidth, buttonHeight);\n  context.clearRect(10, canvas.height * 0.67 - buttonHeight / 2, buttonWidth, buttonHeight);\n  context.globalAlpha = greenIconDimmed ? 0.5 : 1.0;\n  context.drawImage(greenIcon, 10, 10, buttonWidth, buttonHeight);\n  context.globalAlpha = cyanIconDimmed ? 0.5 : 1.0;\n  context.drawImage(cyanIcon, 10, canvas.height - 10 - buttonHeight, buttonWidth, buttonHeight);\n  context.globalAlpha = newIcon1Dimmed ? 0.5 : 1.0;\n  context.drawImage(newIcon1, 10, canvas.height * 0.33 - buttonHeight / 2, buttonWidth, buttonHeight);\n  context.globalAlpha = newIcon2Dimmed ? 0.5 : 1.0;\n  context.drawImage(newIcon2, 10, canvas.height * 0.67 - buttonHeight / 2, buttonWidth, buttonHeight);\n  context.globalAlpha = 1.0;\n}\nfunction isInsideButton(x, y, canvas, buttonX, buttonY, buttonWidth, buttonHeight) {\n  const canvasX = x * canvas.width;\n  const canvasY = y * canvas.height;\n  return canvasX >= buttonX && canvasX <= buttonX + buttonWidth && canvasY >= buttonY && canvasY <= buttonY + buttonHeight;\n}\nfunction isInsideGreenButton(x, y, canvas) {\n  const buttonWidth = canvas.width * 0.1;\n  const buttonHeight = canvas.height * 0.1;\n  return isInsideButton(x, y, canvas, 10, 10, buttonWidth, buttonHeight);\n}\nfunction isInsideCyanButton(x, y, canvas) {\n  const buttonWidth = canvas.width * 0.1;\n  const buttonHeight = canvas.height * 0.1;\n  const buttonY = canvas.height - 10 - buttonHeight;\n  return isInsideButton(x, y, canvas, 10, buttonY, buttonWidth, buttonHeight);\n}\nfunction isInsideNewButton1(x, y, canvas) {\n  const buttonWidth = canvas.width * 0.1;\n  const buttonHeight = canvas.height * 0.1;\n  const buttonY = canvas.height * 0.33 - buttonHeight / 2;\n  return isInsideButton(x, y, canvas, 10, buttonY, buttonWidth, buttonHeight);\n}\nfunction isInsideNewButton2(x, y, canvas) {\n  const buttonWidth = canvas.width * 0.1;\n  const buttonHeight = canvas.height * 0.1;\n  const buttonY = canvas.height * 0.67 - buttonHeight / 2;\n  return isInsideButton(x, y, canvas, 10, buttonY, buttonWidth, buttonHeight);\n}\nfunction playAudio(url, callback) {\n  if (isAudioPlaying) return;\n  isAudioPlaying = true;\n  fetch(url).then(response => response.blob()).then(blob => {\n    const audio = new Audio(URL.createObjectURL(blob));\n    audio.play().then(() => {\n      callback(audio);\n    }).catch(error => {\n      console.error('Error playing audio file:', error);\n      isAudioPlaying = false;\n    });\n    audio.onended = () => {\n      isAudioPlaying = false;\n    };\n  }).catch(error => {\n    console.error('Error fetching and playing audio file:', error);\n    isAudioPlaying = false;\n  });\n}\nfunction stopAudio(audio) {\n  if (audio) {\n    audio.pause();\n    audio.currentTime = 0;\n    isAudioPlaying = false;\n  }\n}\nfunction switchAudio(callback) {\n  fetch('http://localhost:5000/api/switch-wav-file', {\n    method: 'POST'\n  }).then(response => response.json()).then(data => {\n    callback(data.currentIndex);\n  }).catch(error => console.error('Error switching wav file:', error));\n}\nfunction fetchAndUpdateFrequencies(url, canvas, context) {\n  fetch(url).then(response => response.json()).then(data => {\n    (0,_frequencyUpdater_js__WEBPACK_IMPORTED_MODULE_2__.clearTrajectoryData)(); // 清除旧的轨迹数据\n    (0,_frequencyUpdater_js__WEBPACK_IMPORTED_MODULE_2__.updateFrequenciesFromJson)(data);\n    (0,_frequencyUpdater_js__WEBPACK_IMPORTED_MODULE_2__.drawFrequencyTrajectory)(data, canvas, context);\n  }).catch(error => {\n    console.error('Error fetching JSON file:', error);\n  });\n}\nfunction handlePositionChange(x, y, status, canvas, context, audio, currentAudioIndex, setCurrentAudioIndex) {\n  let isInButton = false;\n  if (isInsideGreenButton(x, y, canvas)) {\n    isInButton = true;\n    if (status === 'StartDrawing') {\n      greenIconDimmed = true;\n      playAudio(`http://localhost:5000/api/get-wav-file?index=${currentAudioIndex}`, newAudio => audio = newAudio);\n    } else if (status === 'EndDrawing' || status === 'NotDrawing') {\n      greenIconDimmed = false;\n      stopAudio(audio);\n    }\n  }\n  if (isInsideCyanButton(x, y, canvas)) {\n    isInButton = true;\n    if (status === 'StartDrawing') {\n      cyanIconDimmed = true;\n    } else if (status === 'EndDrawing' || status === 'NotDrawing') {\n      cyanIconDimmed = false;\n    }\n    if (previousStatus === 'StartDrawing' && status === 'Drawing') {\n      switchAudio(newIndex => setCurrentAudioIndex(newIndex));\n    }\n    previousStatus = status;\n  }\n  if (isInsideNewButton1(x, y, canvas)) {\n    isInButton = true;\n    if (status === 'StartDrawing') {\n      newIcon1Dimmed = true;\n      playAudio('http://localhost:5000/api/get-pitch-audio', newAudio => audio = newAudio);\n    } else if (status === 'EndDrawing' || status === 'NotDrawing') {\n      newIcon1Dimmed = false;\n      stopAudio(audio);\n    }\n  }\n  if (isInsideNewButton2(x, y, canvas)) {\n    isInButton = true;\n    if (status === 'StartDrawing') {\n      newIcon2Dimmed = true;\n      fetchAndUpdateFrequencies('http://localhost:5000/api/get-pitch-json', canvas, context);\n    } else if (status === 'EndDrawing' || status === 'NotDrawing') {\n      newIcon2Dimmed = false;\n    }\n  }\n  if (_sharedStatus_js__WEBPACK_IMPORTED_MODULE_1__.sharedStatus.isInTheButton !== isInButton) {\n    (0,_sharedStatus_js__WEBPACK_IMPORTED_MODULE_1__.setIsInTheButton)(isInButton);\n  }\n}\nfunction initializeButton(canvas, context) {\n  let audio;\n  let currentAudioIndex = 0;\n  function setCurrentAudioIndex(newIndex) {\n    currentAudioIndex = newIndex;\n  }\n  (0,_sharedStatus_js__WEBPACK_IMPORTED_MODULE_1__.subscribe)(status => {\n    if (status.currentStatus === 'StartDrawing' || status.currentStatus === 'Drawing' || status.currentStatus === 'EndDrawing' || status.currentStatus === 'NotDrawing') {\n      handlePositionChange(status.currentPosition.x, status.currentPosition.y, status.currentStatus, canvas, context, audio, currentAudioIndex, setCurrentAudioIndex);\n      drawButton(canvas, context, greenIcon, cyanIcon, newIcon1, newIcon2);\n    }\n  });\n  greenIcon.onload = () => {\n    cyanIcon.onload = () => {\n      newIcon1.onload = () => {\n        newIcon2.onload = () => {\n          drawButton(canvas, context, greenIcon, cyanIcon, newIcon1, newIcon2);\n        };\n      };\n    };\n  };\n  greenIcon.onerror = handleImageLoadError;\n  cyanIcon.onerror = handleImageLoadError;\n  newIcon1.onerror = handleImageLoadError;\n  newIcon2.onerror = handleImageLoadError;\n  return () => drawButton(canvas, context, greenIcon, cyanIcon, newIcon1, newIcon2);\n}\n\n//# sourceURL=webpack://my-project/./src/buttonComponent.js?");

/***/ }),

/***/ "./src/canvas.js":
/*!***********************!*\
  !*** ./src/canvas.js ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _sharedStatus_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./sharedStatus.js */ \"./src/sharedStatus.js\");\n/* harmony import */ var _buttonComponent_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./buttonComponent.js */ \"./src/buttonComponent.js\");\n/* harmony import */ var _frequencyUpdater_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./frequencyUpdater.js */ \"./src/frequencyUpdater.js\");\n\n\n\nconst canvas = document.getElementById('canvas');\nconst context = canvas.getContext('2d');\nlet sparkles = [];\nlet trailsPool = [];\nlet currentTrail = [];\nlet lastTrailTime = 0;\nconst FPS = 60;\nfunction createSparkles(x, y) {\n  const radius = 20;\n  for (let i = 0; i < 15; i++) {\n    const angle = Math.random() * 2 * Math.PI;\n    const distance = Math.random() * radius;\n    const initialX = x * canvas.width + Math.cos(angle) * distance;\n    const initialY = y * canvas.height + Math.sin(angle) * distance;\n    const speed = Math.random() * 4;\n    sparkles.push({\n      x: initialX,\n      y: initialY,\n      vx: Math.cos(angle) * speed,\n      vy: Math.sin(angle) * speed,\n      alpha: 1\n    });\n  }\n  if (sparkles.length > 50) {\n    sparkles.splice(0, sparkles.length - 50);\n  }\n}\nfunction createTrail(x, y) {\n  const trailSegment = {\n    x1: x * canvas.width,\n    y1: y * canvas.height,\n    x2: x * canvas.width,\n    y2: y * canvas.height,\n    alpha: 1\n  };\n  if (currentTrail.length > 0) {\n    const lastSegment = currentTrail[currentTrail.length - 1];\n    trailSegment.x1 = lastSegment.x2;\n    trailSegment.y1 = lastSegment.y2;\n  }\n  currentTrail.push(trailSegment);\n}\nfunction clearCanvas() {\n  context.clearRect(0, 0, canvas.width, canvas.height);\n}\nfunction updateAndDrawSparkles() {\n  for (let i = sparkles.length - 1; i >= 0; i--) {\n    const p = sparkles[i];\n    p.x += p.vx;\n    p.y += p.vy;\n    p.alpha -= 0.02;\n    context.globalAlpha = p.alpha;\n    context.fillStyle = `rgba(255, 165, 0, ${p.alpha})`;\n    context.beginPath();\n    context.arc(p.x, p.y, 3, 0, Math.PI * 2);\n    context.fill();\n    if (p.alpha <= 0) {\n      sparkles.splice(i, 1);\n    }\n  }\n}\nfunction updateAndDrawTrails() {\n  for (let j = trailsPool.length - 1; j >= 0; j--) {\n    const trail = trailsPool[j];\n    for (let i = trail.length - 1; i >= 0; i--) {\n      const t = trail[i];\n      context.globalAlpha = t.alpha;\n      context.strokeStyle = `rgba(0, 0, 255, ${t.alpha})`;\n      context.lineWidth = 5;\n      context.shadowBlur = 20;\n      context.shadowColor = 'rgba(0, 0, 255, 1)';\n      context.beginPath();\n      context.moveTo(t.x1, t.y1);\n      context.lineTo(t.x2, t.y2);\n      context.stroke();\n      t.alpha -= 0.01;\n      if (t.alpha <= 0) {\n        trail.splice(i, 1);\n      }\n    }\n    if (trail.length === 0) {\n      trailsPool.splice(j, 1);\n    }\n  }\n}\nfunction drawStoredTrajectories(context) {\n  const trajectoryData = (0,_frequencyUpdater_js__WEBPACK_IMPORTED_MODULE_2__.getTrajectoryData)();\n  context.strokeStyle = 'rgba(128, 128, 128, 0.5)';\n  context.lineWidth = 100; // 增加线的粗细\n\n  trajectoryData.forEach(segment => {\n    if (segment.length > 0) {\n      context.beginPath();\n      context.moveTo(segment[0].x, segment[0].y);\n      for (let i = 1; i < segment.length; i++) {\n        context.lineTo(segment[i].x, segment[i].y);\n      }\n      context.stroke();\n    }\n  });\n}\nconst drawButton = (0,_buttonComponent_js__WEBPACK_IMPORTED_MODULE_1__.initializeButton)(canvas, context);\nfunction update() {\n  clearCanvas();\n  const currentTime = performance.now();\n  if (_sharedStatus_js__WEBPACK_IMPORTED_MODULE_0__.sharedStatus.drawing && !(0,_sharedStatus_js__WEBPACK_IMPORTED_MODULE_0__.getIsInTheButton)()) {\n    createSparkles(_sharedStatus_js__WEBPACK_IMPORTED_MODULE_0__.sharedStatus.currentPosition.x, _sharedStatus_js__WEBPACK_IMPORTED_MODULE_0__.sharedStatus.currentPosition.y);\n    if (currentTrail.length === 0) {\n      currentTrail = [];\n      trailsPool.push(currentTrail);\n    }\n    if (currentTime - lastTrailTime > 10) {\n      createTrail(_sharedStatus_js__WEBPACK_IMPORTED_MODULE_0__.sharedStatus.currentPosition.x, _sharedStatus_js__WEBPACK_IMPORTED_MODULE_0__.sharedStatus.currentPosition.y);\n      lastTrailTime = currentTime;\n    }\n  } else if (currentTrail.length > 0) {\n    currentTrail = [];\n  }\n  updateAndDrawSparkles();\n  updateAndDrawTrails();\n  drawStoredTrajectories(context);\n  context.globalAlpha = 1.0;\n  context.shadowBlur = 0;\n  drawButton();\n}\nfunction initializeCanvas() {\n  setInterval(() => {\n    update();\n  }, 1000 / FPS);\n}\ninitializeCanvas();\n\n//# sourceURL=webpack://my-project/./src/canvas.js?");

/***/ }),

/***/ "./src/frequencyUpdater.js":
/*!*********************************!*\
  !*** ./src/frequencyUpdater.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   clearTrajectoryData: () => (/* binding */ clearTrajectoryData),\n/* harmony export */   drawFrequencyTrajectory: () => (/* binding */ drawFrequencyTrajectory),\n/* harmony export */   getTrajectoryData: () => (/* binding */ getTrajectoryData),\n/* harmony export */   updateFrequenciesFromJson: () => (/* binding */ updateFrequenciesFromJson)\n/* harmony export */ });\n/* harmony import */ var _sharedStatus_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./sharedStatus.js */ \"./src/sharedStatus.js\");\n// src/frequencyUpdater.js\n\n\nlet trajectoryData = [];\nfunction updateFrequenciesFromJson(jsonData) {\n  const {\n    max_frequency,\n    min_frequency\n  } = jsonData;\n\n  // 更新 sharedStatus 中的频率范围\n  (0,_sharedStatus_js__WEBPACK_IMPORTED_MODULE_0__.setMinFrequency)(min_frequency);\n  (0,_sharedStatus_js__WEBPACK_IMPORTED_MODULE_0__.setMaxFrequency)(max_frequency);\n\n  // 记录频率范围的变化\n  console.log(`Frequency range updated: min_frequency = ${min_frequency}, max_frequency = ${max_frequency}`);\n}\nfunction clearTrajectoryData() {\n  trajectoryData = [];\n}\nfunction drawFrequencyTrajectory(jsonData, canvas, context) {\n  const {\n    data,\n    max_frequency,\n    min_frequency\n  } = jsonData;\n  const xMin = canvas.width * 0.15;\n  const xMax = canvas.width * 0.95;\n  const yMin = canvas.height * 0.1;\n  const yMax = canvas.height * 0.9;\n  context.strokeStyle = 'rgba(128, 128, 128, 0.5)';\n  context.lineWidth = 100; // 增加线的粗细\n  context.beginPath();\n  let isDrawing = false;\n  let trajectorySegment = [];\n  data.forEach(point => {\n    const {\n      time,\n      frequency\n    } = point;\n    if (frequency !== \"NaN\") {\n      const x = xMin + (xMax - xMin) * time;\n      const y = yMin + (yMax - yMin) * (1 - (Math.log(frequency) - Math.log(min_frequency)) / (Math.log(max_frequency) - Math.log(min_frequency)));\n      if (isDrawing) {\n        context.lineTo(x, y);\n        trajectorySegment.push({\n          x,\n          y\n        });\n      } else {\n        context.moveTo(x, y);\n        isDrawing = true;\n        trajectorySegment.push({\n          x,\n          y\n        });\n      }\n    } else {\n      if (isDrawing) {\n        trajectoryData.push(trajectorySegment);\n        trajectorySegment = [];\n      }\n      isDrawing = false;\n    }\n  });\n  if (trajectorySegment.length > 0) {\n    trajectoryData.push(trajectorySegment);\n  }\n  context.stroke();\n}\nfunction getTrajectoryData() {\n  return trajectoryData;\n}\n\n//# sourceURL=webpack://my-project/./src/frequencyUpdater.js?");

/***/ }),

/***/ "./src/main.js":
/*!*********************!*\
  !*** ./src/main.js ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _sharedStatus_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./sharedStatus.js */ \"./src/sharedStatus.js\");\n/* harmony import */ var _canvas_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./canvas.js */ \"./src/canvas.js\");\n/* harmony import */ var _audioProcessing_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./audioProcessing.js */ \"./src/audioProcessing.js\");\n/* harmony import */ var _buttonComponent_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./buttonComponent.js */ \"./src/buttonComponent.js\");\n\n\n\n\nconst canvas = document.getElementById('canvas');\nconst context = canvas.getContext('2d');\n\n// 初始化按钮，并获取重新绘制按钮的函数\nconst drawButton = (0,_buttonComponent_js__WEBPACK_IMPORTED_MODULE_3__.initializeButton)(canvas, context);\nfunction resizeCanvas() {\n  canvas.width = window.innerWidth;\n  canvas.height = window.innerHeight;\n  context.clearRect(0, 0, canvas.width, canvas.height);\n  drawButton(); // 每次调整画布大小时重新绘制按钮\n}\nwindow.addEventListener('load', () => {\n  resizeCanvas();\n  (0,_sharedStatus_js__WEBPACK_IMPORTED_MODULE_0__.initializeStatus)();\n});\nwindow.addEventListener('resize', resizeCanvas);\nfunction getRelativePosition(event) {\n  const rect = canvas.getBoundingClientRect();\n  let x, y;\n  if (event.touches && event.touches.length > 0) {\n    x = (event.touches[0].clientX - rect.left) / rect.width;\n    y = (event.touches[0].clientY - rect.top) / rect.height;\n  } else {\n    x = (event.clientX - rect.left) / rect.width;\n    y = (event.clientY - rect.top) / rect.height;\n  }\n  return {\n    x,\n    y\n  };\n}\nfunction startDrawing(event) {\n  event.preventDefault();\n  (0,_sharedStatus_js__WEBPACK_IMPORTED_MODULE_0__.resetPosition)();\n  (0,_sharedStatus_js__WEBPACK_IMPORTED_MODULE_0__.setDrawingStatus)(true);\n  (0,_sharedStatus_js__WEBPACK_IMPORTED_MODULE_0__.setCurrentStatus)('StartDrawing');\n  const {\n    x,\n    y\n  } = getRelativePosition(event);\n  (0,_sharedStatus_js__WEBPACK_IMPORTED_MODULE_0__.updatePosition)(x, y);\n  setTimeout(() => (0,_sharedStatus_js__WEBPACK_IMPORTED_MODULE_0__.setCurrentStatus)('Drawing'), 10); // 10毫秒后设置为Drawing状态\n}\nfunction draw(event) {\n  if (!_sharedStatus_js__WEBPACK_IMPORTED_MODULE_0__.sharedStatus.drawing) return;\n  event.preventDefault();\n  const {\n    x,\n    y\n  } = getRelativePosition(event);\n  (0,_sharedStatus_js__WEBPACK_IMPORTED_MODULE_0__.updatePosition)(x, y);\n}\nfunction endDrawing(event) {\n  event.preventDefault();\n  (0,_sharedStatus_js__WEBPACK_IMPORTED_MODULE_0__.setDrawingStatus)(false);\n  (0,_sharedStatus_js__WEBPACK_IMPORTED_MODULE_0__.setCurrentStatus)('EndDrawing');\n  (0,_sharedStatus_js__WEBPACK_IMPORTED_MODULE_0__.setIsInTheButton)(false); // 结束绘图时将isInTheButton置为false\n  (0,_sharedStatus_js__WEBPACK_IMPORTED_MODULE_0__.resetPosition)();\n  setTimeout(() => (0,_sharedStatus_js__WEBPACK_IMPORTED_MODULE_0__.setCurrentStatus)('NotDrawing'), 0);\n}\ncanvas.addEventListener('mousedown', startDrawing);\ncanvas.addEventListener('touchstart', startDrawing, {\n  passive: false\n});\ncanvas.addEventListener('mousemove', draw);\ncanvas.addEventListener('touchmove', draw, {\n  passive: false\n});\ncanvas.addEventListener('mouseup', endDrawing);\ncanvas.addEventListener('mouseout', endDrawing);\ncanvas.addEventListener('touchend', endDrawing);\ncanvas.addEventListener('touchcancel', endDrawing); // 处理触摸取消事件\n\n// 初始调用\nresizeCanvas();\n(0,_sharedStatus_js__WEBPACK_IMPORTED_MODULE_0__.initializeStatus)();\n\n//# sourceURL=webpack://my-project/./src/main.js?");

/***/ }),

/***/ "./src/sharedStatus.js":
/*!*****************************!*\
  !*** ./src/sharedStatus.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   frequencyRange: () => (/* binding */ frequencyRange),\n/* harmony export */   getCurrentPosition: () => (/* binding */ getCurrentPosition),\n/* harmony export */   getCurrentStatus: () => (/* binding */ getCurrentStatus),\n/* harmony export */   getIsInTheButton: () => (/* binding */ getIsInTheButton),\n/* harmony export */   getMaxFrequency: () => (/* binding */ getMaxFrequency),\n/* harmony export */   getMinFrequency: () => (/* binding */ getMinFrequency),\n/* harmony export */   initializeStatus: () => (/* binding */ initializeStatus),\n/* harmony export */   isDrawing: () => (/* binding */ isDrawing),\n/* harmony export */   resetPosition: () => (/* binding */ resetPosition),\n/* harmony export */   setCurrentStatus: () => (/* binding */ setCurrentStatus),\n/* harmony export */   setDrawingStatus: () => (/* binding */ setDrawingStatus),\n/* harmony export */   setIsInTheButton: () => (/* binding */ setIsInTheButton),\n/* harmony export */   setMaxFrequency: () => (/* binding */ setMaxFrequency),\n/* harmony export */   setMinFrequency: () => (/* binding */ setMinFrequency),\n/* harmony export */   sharedStatus: () => (/* binding */ sharedStatus),\n/* harmony export */   subscribe: () => (/* binding */ subscribe),\n/* harmony export */   updatePosition: () => (/* binding */ updatePosition)\n/* harmony export */ });\nconst sharedStatus = {\n  currentPosition: {\n    x: 0,\n    y: 0\n  },\n  drawing: false,\n  currentStatus: 'NotDrawing',\n  // 初始状态\n  isInTheButton: false,\n  // 是否在按钮内\n  subscribers: []\n};\nconst frequencyRange = {\n  minFrequency: 85,\n  // 默认最小频率\n  maxFrequency: 400 // 默认最大频率\n};\nfunction updatePosition(x, y) {\n  if (sharedStatus.currentPosition.x !== x || sharedStatus.currentPosition.y !== y) {\n    sharedStatus.currentPosition.x = x;\n    sharedStatus.currentPosition.y = y;\n    notifySubscribers();\n  }\n}\nfunction setDrawingStatus(isDrawing) {\n  if (sharedStatus.drawing !== isDrawing) {\n    sharedStatus.drawing = isDrawing;\n    notifySubscribers();\n  }\n}\nfunction setCurrentStatus(status) {\n  if (sharedStatus.currentStatus !== status) {\n    sharedStatus.currentStatus = status;\n    notifySubscribers();\n  }\n}\nfunction setIsInTheButton(isInTheButton) {\n  if (sharedStatus.isInTheButton !== isInTheButton) {\n    sharedStatus.isInTheButton = isInTheButton;\n    notifySubscribers();\n  }\n}\nfunction subscribe(callback) {\n  sharedStatus.subscribers.push(callback);\n}\nfunction notifySubscribers() {\n  sharedStatus.subscribers.forEach(callback => callback(sharedStatus));\n}\nfunction initializeStatus() {\n  setCurrentStatus('NotDrawing');\n}\nfunction resetPosition() {\n  sharedStatus.currentPosition = {\n    x: 0,\n    y: 0\n  };\n  notifySubscribers();\n}\n\n// 新增的get方法\nfunction getCurrentPosition() {\n  return sharedStatus.currentPosition;\n}\nfunction isDrawing() {\n  return sharedStatus.drawing;\n}\nfunction getCurrentStatus() {\n  return sharedStatus.currentStatus;\n}\nfunction getIsInTheButton() {\n  return sharedStatus.isInTheButton;\n}\n\n// 新增的频率范围相关的getter和setter\nfunction getMinFrequency() {\n  return frequencyRange.minFrequency;\n}\nfunction setMinFrequency(value) {\n  frequencyRange.minFrequency = value;\n  notifySubscribers();\n}\nfunction getMaxFrequency() {\n  return frequencyRange.maxFrequency;\n}\nfunction setMaxFrequency(value) {\n  frequencyRange.maxFrequency = value;\n  notifySubscribers();\n}\n\n//# sourceURL=webpack://my-project/./src/sharedStatus.js?");

/***/ }),

/***/ "./src/svgIcons.js":
/*!*************************!*\
  !*** ./src/svgIcons.js ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   cyanIconURL: () => (/* binding */ cyanIconURL),\n/* harmony export */   greenIconURL: () => (/* binding */ greenIconURL),\n/* harmony export */   newIcon1URL: () => (/* binding */ newIcon1URL),\n/* harmony export */   newIcon2URL: () => (/* binding */ newIcon2URL)\n/* harmony export */ });\nconst greenIconURL = 'data:image/svg+xml;charset=utf-8,' + encodeURIComponent(`\n    <svg viewBox=\"0 0 1024 1024\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path fill=\"#1afa29\" d=\"M882.734114 459.147258l0.024559-0.024559L244.016061 21.12718l-0.199545 0.188288C230.582097 8.748245 212.62819 1.014096 192.840518 1.014096c-40.704051 0-73.699536 32.66905-73.699536 72.996524 0 22.148439-0.954745 65.513086 0 64.572668l0 373.422851 0 393.071354c0 0.325411 0 25.249057 0 44.935422 0 40.302915 32.995485 72.972988 73.699536 72.972988 19.862373 0 37.892005-7.78429 51.125401-20.466124l0.050142 0.025583 638.742613-437.982216-0.024559-0.038886c13.886265-13.270235 22.549575-31.889291 22.549575-52.531424 0-0.050142 0-0.088004 0-0.150426 0-0.050142 0-0.11154 0-0.149403C905.28369 491.048829 896.620379 472.41647 882.734114 459.147258z\" />\n    </svg>\n    `);\nconst cyanIconURL = 'data:image/svg+xml;charset=utf-8,' + encodeURIComponent(`\n      <svg viewBox=\"0 0 1024 1024\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path fill=\"#1296db\" d=\"M17.066667 512V227.584c0-52.138667 56.405333-84.650667 101.546666-58.624l246.357334 142.250667 246.357333 142.250666c45.141333 26.026667 45.141333 91.221333 0 117.248L364.970667 712.874667 118.613333 855.04C73.472 881.152 17.066667 848.554667 17.066667 796.416V512zM893.696 865.28c-57.6 0-104.704-47.104-104.704-104.704V263.424c0-57.6 47.104-104.704 104.704-104.704S998.4 205.824 998.4 263.424v497.237333c0 57.514667-47.104 104.618667-104.704 104.618667z\"  />\n    </svg>\n    `);\nconst newIcon1URL = 'data:image/svg+xml;charset=utf-8,' + encodeURIComponent(`\n    <svg viewBox=\"0 0 1024 1024\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path fill=\"#ff4500\" d=\"M882.734114 459.147258l0.024559-0.024559L244.016061 21.12718l-0.199545 0.188288C230.582097 8.748245 212.62819 1.014096 192.840518 1.014096c-40.704051 0-73.699536 32.66905-73.699536 72.996524 0 22.148439-0.954745 65.513086 0 64.572668l0 373.422851 0 393.071354c0 0.325411 0 25.249057 0 44.935422 0 40.302915 32.995485 72.972988 73.699536 72.972988 19.862373 0 37.892005-7.78429 51.125401-20.466124l0.050142 0.025583 638.742613-437.982216-0.024559-0.038886c13.886265-13.270235 22.549575-31.889291 22.549575-52.531424 0-0.050142 0-0.088004 0-0.150426 0-0.050142 0-0.11154 0-0.149403C905.28369 491.048829 896.620379 472.41647 882.734114 459.147258z\" />\n    </svg>\n    `);\nconst newIcon2URL = 'data:image/svg+xml;charset=utf-8,' + encodeURIComponent(`\n    <svg viewBox=\"0 0 1024 1024\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path fill=\"#ffd700\" d=\"M882.734114 459.147258l0.024559-0.024559L244.016061 21.12718l-0.199545 0.188288C230.582097 8.748245 212.62819 1.014096 192.840518 1.014096c-40.704051 0-73.699536 32.66905-73.699536 72.996524 0 22.148439-0.954745 65.513086 0 64.572668l0 373.422851 0 393.071354c0 0.325411 0 25.249057 0 44.935422 0 40.302915 32.995485 72.972988 73.699536 72.972988 19.862373 0 37.892005-7.78429 51.125401-20.466124l0.050142 0.025583 638.742613-437.982216-0.024559-0.038886c13.886265-13.270235 22.549575-31.889291 22.549575-52.531424 0-0.050142 0-0.088004 0-0.150426 0-0.050142 0-0.11154 0-0.149403C905.28369 491.048829 896.620379 472.41647 882.734114 459.147258z\" />\n    </svg>\n    `);\n\n//# sourceURL=webpack://my-project/./src/svgIcons.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/main.js");
/******/ 	
/******/ })()
;